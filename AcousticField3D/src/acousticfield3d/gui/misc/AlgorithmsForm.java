/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package acousticfield3d.gui.misc;

import acousticfield3d.algorithms.BFGSOptimization;
import acousticfield3d.algorithms.bfgs.BFGSProgressListener;
import acousticfield3d.gui.MainForm;
import acousticfield3d.math.Vector3f;
import acousticfield3d.scene.Entity;
import acousticfield3d.scene.MeshEntity;
import acousticfield3d.simulation.Simulation;
import acousticfield3d.utils.Parse;

/**
 *
 * @author Asier
 */
public class AlgorithmsForm extends javax.swing.JFrame implements BFGSProgressListener{
    final MainForm mf;
    final BFGSOptimization bfgs;
            
    private double[] lastX;
    private double lastFX;
    private double[] currentX;
    private double currentFX;
    private double[] X;
    private double FX;
            
    private int reportEvery = 1;
    public AlgorithmsForm(MainForm mf) {
        this.mf = mf;
        initComponents();
        bfgs = new BFGSOptimization(this);
    }

    public MainForm getMf() {
        return mf;
    }
    
    public void setBarValue(int p){
        progressBar.setValue( p );
    }
    
    public double getAlpha(){
        return Parse.toDouble( alphaText.getText() );
    }
    
    public int getSteps(){
        return Parse.toInt(stepsText.getText() );
    }
    
    public int getReportEvery(){
        return Parse.toInt( reportEveryText.getText() );
    }
    
    public double getXMin(){
        return Parse.toDouble(xMinText.getText() );
    }
    
    public double getGMin(){
        return Parse.toDouble( gMinText.getText() );
    }
    
    public Vector3f getLaplacianConstants(){
        return new Vector3f().parse( laplacianConstantsText.getText() );
    }
    
    public double getLowPressureK(){
        return Parse.toDouble( lowPressureKText.getText() );
    }
    
    public boolean isPressure(){
        return pressureCheck.isSelected();
    }
    public boolean isIndPressure(){
        return multiPressureCheck.isSelected();
    }
    public boolean isGorkov(){
        return gorkovCheck.isSelected();
    }
    public boolean isForce(){
        return forceCheck.isSelected();
    }
    public boolean isBottle(){
        return bottleCheck.isSelected();
    }
    public boolean isGLaplacian(){
        return maxGLaplacian.isSelected();
    }
    
    public boolean isEqualizer(){
        return equalizerCheck.isSelected();
    }
    
    public double getEqualizerWeight(){
        return Parse.toDouble( equalizerWeightText.getText() );
    }

    public Vector3f getWeightsN(){
        return new Vector3f().parse( weightsNText.getText() );
    }
    
    public Vector3f getWeightsP(){
        return new Vector3f().parse( weightsPText.getText() );
    }
    
    public Vector3f getDistances(){
        return new Vector3f().parse( distancesText.getText() );
    }
    

    private void calcAlgorithm(){
        if(bfgs != null){
            //gather the beads
            bfgs.controlPoints.clear();
            for(Entity e : mf.getSelection()){
                if( (e instanceof MeshEntity) && ((e.getTag() & Entity.TAG_CONTROL_POINT) != 0)){
                    bfgs.controlPoints.add((MeshEntity) e );
                }
            }
            //mf.scene.gatherMeshEntitiesWithTag( a.controlPoints, Entity.TAG_CONTROL_POINT);
            

            final Simulation sim = mf.simulation;            
            mf.renderer.updateTransducersBuffers( sim );

            bfgs.calc(mf, mf.simulation);

        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        varToOptimizeGroup = new javax.swing.ButtonGroup();
        bottleCheck = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        distancesText = new javax.swing.JTextField();
        centralWText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        weightsPText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        weightsNText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        groupHoloOrigin = new javax.swing.ButtonGroup();
        forceCheck = new javax.swing.JRadioButton();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        calcBFGSButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        stepsText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        xMinText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        gMinText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        clearAreaButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        reportEveryText = new javax.swing.JTextField();
        pressureCheck = new javax.swing.JRadioButton();
        gorkovCheck = new javax.swing.JRadioButton();
        lowPressureKText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        maxGLaplacian = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        laplacianConstantsText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        alphaText = new javax.swing.JTextField();
        multiPressureCheck = new javax.swing.JRadioButton();
        equalizerCheck = new javax.swing.JCheckBox();
        equalizerWeightText = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        varToOptimizeGroup.add(bottleCheck);
        bottleCheck.setText("bottle");

        jLabel7.setText("distances:");

        distancesText.setText("10E-3 10E-3 10E-3");

        centralWText.setText("4");

        jLabel9.setText("Central Weight:");

        weightsPText.setText("-1 0 -1");

        jLabel11.setText("weightsP:");

        weightsNText.setText("-1 -4 -1");

        jLabel8.setText("weightsN:");

        varToOptimizeGroup.add(forceCheck);
        forceCheck.setText("Force");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Algorithms");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("BFGS");

        calcBFGSButton.setText("Calc");
        calcBFGSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBFGSButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Steps:");

        stepsText.setText("3000");

        jLabel4.setText("xMin:");

        xMinText.setText("1E-25");

        jLabel5.setText("gMin:");

        gMinText.setText("1E-25");

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        clearAreaButton.setText("Clear");
        clearAreaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAreaButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("report every:");

        reportEveryText.setText("1000");

        varToOptimizeGroup.add(pressureCheck);
        pressureCheck.setText("Pressure");

        varToOptimizeGroup.add(gorkovCheck);
        gorkovCheck.setText("MinGorkov");

        lowPressureKText.setText("1");

        jLabel10.setText("LowPK");

        varToOptimizeGroup.add(maxGLaplacian);
        maxGLaplacian.setSelected(true);
        maxGLaplacian.setText("MaxLapMinAmp");

        jLabel12.setText("WeightsXYZ:");

        laplacianConstantsText.setText("1.0 1.0 1.0");

        jLabel13.setText("Alpha:");

        alphaText.setText("1.0");

        varToOptimizeGroup.add(multiPressureCheck);
        multiPressureCheck.setText("MPre");

        equalizerCheck.setText("equalizer");

        equalizerWeightText.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearAreaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xMinText, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gMinText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alphaText))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stepsText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportEveryText, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calcBFGSButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pressureCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiPressureCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(gorkovCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxGLaplacian))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(equalizerCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(equalizerWeightText))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(laplacianConstantsText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lowPressureKText)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calcBFGSButton)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stepsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(reportEveryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(xMinText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(gMinText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(alphaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pressureCheck)
                    .addComponent(gorkovCheck)
                    .addComponent(maxGLaplacian)
                    .addComponent(multiPressureCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(laplacianConstantsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowPressureKText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equalizerCheck)
                    .addComponent(equalizerWeightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(clearAreaButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible( false );
    }//GEN-LAST:event_okButtonActionPerformed

    private void calcBFGSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBFGSButtonActionPerformed
        runBFGS( true, true );
    }//GEN-LAST:event_calcBFGSButtonActionPerformed

    public void runBFGS(boolean runInParallel, boolean updateAfter){
        if (runInParallel){
            reportEvery = getReportEvery();
            WorkingCalc wc = new WorkingCalc();
            wc.start();
        }else{
            calcAlgorithm();
        }
        if(updateAfter){
            mf.needUpdate();
        }
    }
    
    private void clearAreaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAreaButtonActionPerformed
        area.setText( "" );
    }//GEN-LAST:event_clearAreaButtonActionPerformed

    @Override
    public void bfgsOnStep(int currentSteps, int totalSteps, double diffX, double diffG, int hessian) {
        progressBar.setValue( currentSteps * 100 / totalSteps);
        if (currentSteps % reportEvery == 0){
            area.append( currentSteps + "/" + totalSteps + " -> " + 
                    "diffX=" + diffX + " | diffG=" + diffG + "| hessians = " + hessian + "\n");
        }
    }
    
    @Override
    public void bfgsOnFinish(int iters, boolean didExitX, boolean didExitG, int hessian, double fx, double[] x){
        FX = fx;
        X = x;
        area.append( "Finish iters = " + iters + " x = " + didExitX + " g = " + didExitG + "| hessians = " + hessian +"\n");
    }

    public void selectDefaultAlg(int algNumber) {
        if (algNumber == 0){
            pressureCheck.setSelected( true );
        }else if (algNumber == 1){
            forceCheck.setSelected( true );
        }else if (algNumber == 2){
            gorkovCheck.setSelected( true );
        }else if (algNumber == 3){
            maxGLaplacian.setSelected( true );
        }
    }
  
    public class WorkingCalc extends Thread {

        @Override
        public void run() {
            calcBFGSButton.setEnabled( false );
            try{
                calcAlgorithm();
            }catch (Exception e){
                e.printStackTrace();
            }
            calcBFGSButton.setEnabled( true );
        }
        
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alphaText;
    private javax.swing.JTextArea area;
    private javax.swing.JRadioButton bottleCheck;
    private javax.swing.JButton calcBFGSButton;
    private javax.swing.JTextField centralWText;
    private javax.swing.JButton clearAreaButton;
    private javax.swing.JTextField distancesText;
    private javax.swing.JCheckBox equalizerCheck;
    private javax.swing.JTextField equalizerWeightText;
    private javax.swing.JRadioButton forceCheck;
    private javax.swing.JTextField gMinText;
    private javax.swing.JRadioButton gorkovCheck;
    private javax.swing.ButtonGroup groupHoloOrigin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField laplacianConstantsText;
    private javax.swing.JTextField lowPressureKText;
    private javax.swing.JRadioButton maxGLaplacian;
    private javax.swing.JRadioButton multiPressureCheck;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton pressureCheck;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField reportEveryText;
    private javax.swing.JTextField stepsText;
    private javax.swing.ButtonGroup varToOptimizeGroup;
    private javax.swing.JTextField weightsNText;
    private javax.swing.JTextField weightsPText;
    private javax.swing.JTextField xMinText;
    // End of variables declaration//GEN-END:variables


}
